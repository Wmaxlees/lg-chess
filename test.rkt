#lang typed/racket

; 15x15 Bitboards representing possible moves for each piece
(define pawnMove : Number #b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)
(define pawnAttack : Number #b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)
(define rookMove : Number #b000000010000000000000010000000000000010000000000000010000000000000010000000000000010000000000000010000000111111101111111000000010000000000000010000000000000010000000000000010000000000000010000000000000010000000000000010000000)
(define knightMove : Number #b000000000000000000000000000000000000000000000000000000000000000000000000000000000101000000000001000100000000000000000000000001000100000000000101000000000000000000000000000000000000000000000000000000000000000000000000000000000)
(define bishopMove : Number #b100000000000001010000000000010001000000000100000100000001000000010000010000000001000100000000000101000000000000000000000000000101000000000001000100000000010000010000000100000001000001000000000100010000000000010100000000000001)
(define queenMove : Number #b100000010000001010000010000010001000010000100000100010001000000010010010000000001010100000000000111000000111111101111111000000111000000000001010100000000010010010000000100010001000001000010000100010000010000010100000010000001)
(define kingMove : Number #b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111000000000000101000000000000111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)

; generateKingMove
;     Generates the set of shortest moves from start(x,y) to goal(x,y)
;
;     Returns a pair (a,b)
;        a = Number of moves
;        b = Possible moves on 8x8 bitboard
(define (generateKingMove
         [startX : Number] [startY : Number] [goalX : Number] [goalY : Number]): (Pairof Number Number)
  
  
  (cons startX startY))